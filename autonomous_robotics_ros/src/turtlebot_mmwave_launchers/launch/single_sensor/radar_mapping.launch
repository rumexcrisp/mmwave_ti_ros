<!--
  Launch file to perform mapping using octomap with the radar
 -->
<launch>

  <arg name="filter" default="true"/>
  <!-- <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>

  <include file="$(find turtlebot3_bringup)/launch/includes/description.launch.xml">
    <arg name="model" value="$(arg model)" />
  </include> -->

  <!-- Publish static transform from map to odom for mapping using only odometry info -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="static_tf_map_to_odom" args="0 0 0 0 0 0 map odom 100"/> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="static_tf_map_to_odom" args="0 0 0 0 0 0 map odom"/> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_base_link_to_base_footprint" args="0 0 0 0 0 0 base_footprint base_link"/> -->


  <!-- ########## realsense ########## -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_realsense_raw" output="screen" >
    <remap from="octomap_point_cloud_centers" to="realsense_raw_point_cloud_centers" />
    <remap from="projected_map" to="realsense_raw_map" />
    <remap from="cloud_in" to="camera/depth/color/points_decimate" />
    <!-- <remap from="cloud_in" to="radar_laser_pcl" /> -->
    <param name="filter_ground" value="false" />
    <!-- <param name="ground_filter/plane_distance" value="0.00"/> -->
    <param name="sensor_model/max_range" value="2.0"/>
    <param name="pointcloud_min_z" value="0.05"/>
    <param name="pointcloud_max_z" value="0.5"/>
    <param name="sensor_model/hit" value="0.51"/>
    <param name="sensor_model/miss" value="0.49"/>
    <param name="sensor_model/min" value="0.01"/>
    <param name="sensor_model/max" value="0.99"/>
  </node>


  <node pkg="nodelet" type="nodelet" name="realsense_mapping_SOR_filt_mapping" args="standalone pcl/StatisticalOutlierRemoval" output="screen" >
    <remap from="~input" to="realsense_raw_point_cloud_centers" />
    <remap from="~output" to="realsense_mapping_SOR_filter_out" />
    <param name="mean_k" value="5" />
    <param name="stddev" value="0.05" />
  </node>
  
  <!-- Create "filtered" 3D map using second octomap node -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_realsense_filtered" output="screen" >
    <remap from="octomap_point_cloud_centers" to="realsense_filtered_point_cloud_centers" />
    <remap from="projected_map" to="realsense_filtered_map" />
    <remap from="cloud_in" to="realsense_mapping_SOR_filter_out" />
    <param name="filter_ground" value="false" />
  </node>


  <!-- ########## radar ########## -->

  <!-- Add nodes to filter/limit Radar data before using it for mapping -->
  <include file="$(find turtlebot_mmwave_launchers)/launch/single_sensor/radar_limit_filters.launch" if="$(arg filter)"/>

  <node pkg="octomap_server" type="octomap_server_node" name="octomap_radar_raw" output="screen" >
    <remap from="octomap_point_cloud_centers" to="radar_raw_point_cloud_centers" />
    <remap from="projected_map" to="radar_raw_map" />
    <remap from="cloud_in" to="radar_xyz_filt_out" />
    <param name="filter_ground" value="false" />
    <!-- <param name="ground_filter/plane_distance" value="0.00"/> -->
    <param name="sensor_model/max_range" value="10.0"/>
    <param name="pointcloud_min_z" value="-0.05"/>
    <param name="pointcloud_max_z" value="0.3"/>
    <param name="sensor_model/hit" value="0.99"/>
    <param name="sensor_model/miss" value="0.01"/>
    <param name="sensor_model/min" value="0.01"/>
    <param name="sensor_model/max" value="0.99"/>
  </node>


  <node pkg="nodelet" type="nodelet" name="radar_mapping_SOR_filt_mapping" args="standalone pcl/StatisticalOutlierRemoval" output="screen" >
    <remap from="~input" to="radar_raw_point_cloud_centers" />
    <remap from="~output" to="radar_mapping_SOR_filter_out" />
    <param name="mean_k" value="5" />
    <param name="stddev" value="0.05" />
  </node>
  
  <!-- Create "filtered" 3D map using second octomap node -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_radar_filtered" output="screen" >
    <remap from="octomap_point_cloud_centers" to="radar_filtered_point_cloud_centers" />
    <remap from="projected_map" to="radar_filtered_map" />
    <remap from="cloud_in" to="radar_mapping_SOR_filter_out" />
    <param name="filter_ground" value="false" />
  </node>


  <!-- <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server" /> -->
  
</launch>
